name: "CI"

on:
  push:
    branches:
      - "*"  # 所有分支
  workflow_dispatch:  # 手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - linux/amd64
          - linux/arm64
          - linux/386
          - linux/arm/v5
          - linux/arm/v7
          - linux/ppc64le
          - linux/s390x

    steps:
      # 检出代码
      - uses: actions/checkout@v4

      # 设置 QEMU，以支持跨平台编译
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 设置 Docker Buildx
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      # 安装 PyInstaller 以打包 Python FastAPI 项目
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip install pyinstaller

      # 编译 Python FastAPI 项目
      - name: Build Binary
        run: |
          mkdir -p output
          pyinstaller --onefile --distpath output app.py
          mv output/app output/app-${{ matrix.arch }}

      # 上传二进制文件到 GitHub Actions 的 Artifact，以便调试或下载
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-${{ matrix.arch }}
          path: output/app-${{ matrix.arch }}

      # 创建 GitHub Release 并上传构建产物
      - name: Upload to GitHub Release
        if: github.ref == 'refs/heads/main'  # 仅在主分支上创建 Release
        uses: softprops/action-gh-release@v1
        with:
          files: output/app-${{ matrix.arch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
