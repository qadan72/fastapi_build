name: release

on:
  push:
    tags:
      - v*

jobs:

  # 创建发布
  release:
    runs-on: ubuntu-latest
    # 输出变量
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release ${{ github.ref }}
          draft: false
          prerelease: false


  # 打包上传
  build-windows-app:
    needs: release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          pip install fastapi==0.108.0
          pip install pyinstaller==6.3.0
          pip install pywebview==4.4.1
          pip install uvicorn==0.25.0

      - name: Build executable
        run: |
          pyinstaller --onefile --name fastapi_app app.py

      - name: Upload executables
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          # 获取变量
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./dist/client.exe
          asset_name: client.exe
          asset_content_type: application/octet-stream

  build-macos-linux:
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # ubuntu macos 打包
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install fastapi==0.108.0
          pip install pyinstaller==6.3.0
          pip install pywebview==4.4.1
          pip install uvicorn==0.25.0

      - name: Build executable
        run: |
          pyinstaller --onefile --name fastapi_app app.py
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            zip -r -X client-macos.zip ./dist/client.app
          fi

      - name: Upload executables
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          # 获取变量
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: |
            ${{ matrix.os == 'macos-latest' && './client-macos.zip' || './dist/client' }}
          asset_name: |
            ${{ matrix.os == 'macos-latest' && 'client-macos.zip' || 'client-linux' }}
          asset_content_type: application/octet-stream
